name: Deployment (production)

on:
  push:
      branches: ["chore/nene"]

jobs:
  build:
    runs-on: "ubuntu-24.04"
    env:
      EMSCRIPTEN_VERSION: 4.0.9
      GODOT_VERSION: 4.4.1-stable
      GODOT_RELEASE_NAME: stable
      BUTLER_VERSION: 15.24.0
      GODOT_PLATFORM: linux.x86_64
    
    steps:
      - uses: actions/checkout@v4
      
      # - name: Install custom build templates compilation dependencies
      #   env:
      #     EMSDK_VERBOSE: 0
      #   run: |
      #     sudo apt-get -qq update
      #     sudo apt-get install -qq scons binaryen
      #     git clone https://github.com/emscripten-core/emsdk.git
      #     ./emsdk/emsdk install ${{ env.EMSCRIPTEN_VERSION }}
      #     ./emsdk/emsdk activate ${{ env.EMSCRIPTEN_VERSION }} --permanent
      #     echo "/home/runner/work/portobello/portobello/emsdk" >> "$GITHUB_PATH"
      #     echo "/home/runner/work/portobello/portobello/emsdk/upstream/emscripten" >> "$GITHUB_PATH"
      
      # - name: Compile and install custom build template
      #   run: |
      #     git clone https://github.com/godotengine/godot.git -b ${{ env.GODOT_VERSION }}
      #     cd godot
      #     scons platform=web target=template_release optimize=size use_volk=no tools=no deprecated=no threads=no build_profile=${{ github.workspace }}/custom_profile.build
      #     mkdir -p ~/.local/share/godot/templates/4.4.1.stable
      #     mv bin/godot.web.template_release.wasm32.nothreads.zip ~/.local/share/godot/templates/4.4.1.stable/web_release_nothreads.zip

# wget https://github.com/godotengine/godot-builds/releases/download/${GODOT_VERSION}-${RELEASE_NAME}/Godot_v${GODOT_VERSION}-${RELEASE_NAME}_${GODOT_PLATFORM}.zip \
#    && wget https://github.com/godotengine/godot-builds/releases/download/${GODOT_VERSION}-${RELEASE_NAME}/Godot_v${GODOT_VERSION}-${RELEASE_NAME}_export_templates.tpz \

      - name: Export for web
        run: |
          sudo apt-get -qq update
          sudo apt-get install -qq scons binaryen
          curl -sS -L -o godot-${{ env.GODOT_VERSION }}.zip https://github.com/godotengine/godot-builds/releases/download/${{ env.GODOT_VERSION }}/Godot_v${{ env.GODOT_VERSION }}_linux.x86_64.zip
          unzip -qq godot-${{ env.GODOT_VERSION }}.zip
          mkdir -p ${{ github.workspace }}/builds/bucho
          ls -li | grep Godot
          ./Godot_v${{ env.GODOT_VERSION }}_linux.x86_64 --headless --path ${{ github.workspace }} --export-release "Web" ${{ github.workspace }}/builds/bucho/index.html
          wasm-opt ${{ github.workspace }}/builds/bucho/index.wasm -o ${{ github.workspace }}/builds/bucho/optimized.wasm -all --post-emscripten -Oz
          zip -r ${{ github.workspace }}/builds/bucho.zip ${{ github.workspace }}/builds/bucho

      - name: Deploy to Itch
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
        run: |
          curl -sS -L -o ${{ github.workspace }}/butler/butler.zip https://broth.itch.ovh/butler/linux-amd64/${{ env.BUTLER_VERSION }}/archive/default
          unzip butler.zip
          chmod +x butler
          ./butler/butler -V
          ./butler/butler push bucho.zip pyramid-seph/bucho-busca-comida-portobello-ex:html
