name: MEH 

on:
  push:
      branches: ["chore/lalalallalallalal"]

jobs:
  build:
    runs-on: "ubuntu-24.04"
    env:
      EMSCRIPTEN_VERSION: 4.0.9
      GODOT_VERSION: 4.4.1-stable
      BUTLER_VERSION: 15.24.0
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install apt-get dependencies
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}"
          #sudo apt-get -qq update
          sudo apt-get install -qq scons binaryen

      - id: cache-emscripten
        uses: actions/cache@v4
        with:
          path: "${{ github.workspace }}/emsdk"
          key: emscripten-${{ env.EMSCRIPTEN_VERSION }}-${{ runner.os }}
      
      - name: Install Emscripten
        env:
          EMSDK_VERBOSE: 0
        if: steps.cache-emscripten.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/emscripten-core/emsdk.git
          ./emsdk/emsdk install ${{ env.EMSCRIPTEN_VERSION }}
          
      - name: Activate Emscripten
        run: |
          ./emsdk/emsdk activate ${{ env.EMSCRIPTEN_VERSION }} --permanent
          echo "/home/runner/work/portobello/portobello/emsdk" >> "$GITHUB_PATH"
          echo "/home/runner/work/portobello/portobello/emsdk/upstream/emscripten" >> "$GITHUB_PATH"

      - id: cache-godot
        uses: actions/cache@v4
        with:
          path: |
            "${{ github.env.home }}/godot"
            "${{ github.env.home }}/godot-${{ env.GODOT_VERSION }}"
          key: godot-${{ env.GODOT_VERSION }}-${{ runner.os }}
      
      - name: Download Godot client
        if: steps.cache-godot.outputs.cache-hit != 'true'
        run: |
          curl -sS -L -o godot-${{ env.GODOT_VERSION }}.zip https://github.com/godotengine/godot/releases/download/${{ env.GODOT_VERSION }}/Godot_v${{ env.GODOT_VERSION }}_linux.x86_64.zip
          unzip -qq godot-${{ env.GODOT_VERSION }}.zip
      
      - name: Download godot source
        if: steps.cache-godot.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/godotengine/godot.git -b ${{ env.GODOT_VERSION }}

      - name: Compile custom build template
        run: |
          cd godot
          scons platform=web target=template_release optimize=size use_volk=no tools=no deprecated=no threads=no build_profile=${{ github.workspace }}/ci/custom_profile.build
          mv bin/godot.web.template_release.wasm32.nothreads.zip bin/web_release_nothreads.zip
          
      - name: Export for web
        run: |
          mkdir -p ${{ github.workspace }}/_builds/bucho
          ./godot-${{ env.GODOT_VERSION }}/Godot_v${{ env.GODOT_VERSION }}_linux.x86_64 --headless --path ${{ github.workspace }} --export-release ${{ github.workspace }}/export_presets.cfg ${{ github.workspace }}/_builds/bucho
          wasm-opt ${{ github.workspace }}/_builds/bucho/index.wasm -o ${{ github.workspace }}/_builds/bucho/optimized.wasm -all --post-emscripten -Oz
          zip -r ${{ github.workspace }}/_builds/bucho.zip ${{ github.workspace }}/_builds/bucho # TODO use current version
 
      - id: cache-butler
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/butler
          key: butler-${{ env.BUTLER_VERSION }}-${{ runner.os }}

      - name: Install Butler
        if: steps.cache-butler.outputs.cache-hit != 'true'
        run: |
          mkdir -p ${{ github.workspace }}/butler
          curl -sS -L -o butler.zip https://broth.itch.ovh/butler/linux-amd64/${{ env.BUTLER_VERSION }}/archive/default
          unzip butler.zip
          chmod +x butler
          ./butler/butler -V

      - name: Deploy to Itch
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
        run: |
          ./${{ github.workspace }}/butler/butler push bucho.zip pyramid-seph/bucho-busca-comida-portobello-ex:html
